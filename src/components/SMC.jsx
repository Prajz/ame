/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 src/assets/models/runner/SMC.glb
*/

import React, { useRef, useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { PerspectiveCamera, useScroll} from '@react-three/drei'
import { CatmullRomCurve3, Euler, Quaternion, Shape, Vector3 } from 'three'

export function SMC(props) {

  const bongo = 1600;

  const { nodes, materials } = useGLTF('./src/assets/models/runner/SMC.glb')

  const curve = useMemo(() => {
    return new CatmullRomCurve3([
      new Vector3(-1 ,0 ,0),
      new Vector3(5 ,0 ,0),
      new Vector3(10 ,0 ,0),
      new Vector3(15 ,0 ,0),
      new Vector3(20 ,0 ,0),
      new Vector3(24 ,0 ,1),
      new Vector3(28 ,0 ,3), 
      new Vector3(32.5 ,0 ,6), 
      new Vector3(34.8 ,0 ,7.8), 
      new Vector3(37.9 ,0 ,10.4), 
      new Vector3(38.2 ,0 ,11.4), 
      new Vector3(39.2 ,0 ,14), 
      new Vector3(42 ,0 ,18), 
      new Vector3(46 ,0 ,22), 
      new Vector3(51 ,0 ,27), 
      new Vector3(54 ,0 ,31), 
      new Vector3(61 ,0 ,41), 
      new Vector3(66 ,0 ,49), 
      new Vector3(67 ,0 ,54), 
      new Vector3(68 ,0 ,59), 
      new Vector3(69 ,0 ,66),
      new Vector3(69 ,0 ,86),
      new Vector3(59 ,0 ,86),
      new Vector3(49 ,0.1 ,86),
      new Vector3(39 ,0 ,86),
      new Vector3(29 ,0 ,82),
      new Vector3(19 ,0 ,80),
      new Vector3(19 ,0 ,40),
      new Vector3(8 ,0 ,30),
      new Vector3(7 ,0 ,25),
      new Vector3(-10 ,0 ,30),
      new Vector3(-20 ,0 ,15),
      new Vector3(-15 ,0 ,0),
      new Vector3(-1 ,0 ,0),
    ],
    true,
      "chordal"
    )
  }, [])


  const scroll = useScroll();
  
  useFrame((_state, delta) => {
    typresfr.current.rotation.x += delta * 17
  })

  const typresbl = useRef()
  const typresbr = useRef()
  const typresfl = useRef()
  const typresfr = useRef()
  const ste = useRef()
  useFrame((_state, delta) => {
    typresbl.current.rotation.x += delta * 6
  })
  useFrame((_state, delta) => {
    typresbr.current.rotation.x += delta * 6
  })
  useFrame((_state, delta) => {
    typresfl.current.rotation.x += delta * 0.1
    typresfl.current.rotation.z += delta * -1.2
  })

  useFrame((_state, delta) => {
    ste.current.rotation.y += delta * 0.2
  })


  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, Math.PI / 2 ]} position={[1.8,0,0]}>
        <mesh geometry={nodes.BL.geometry} material={materials.tread_png} position={[0.82, 2.56, -0.23]}  ref={typresbl} />
        <mesh geometry={nodes.BR.geometry} material={materials.tread_png} position={[-0.85, 2.56, -0.24]} ref={typresbr}/>
        <mesh geometry={nodes.FL.geometry} material={materials.tread_png} position={[0.82, -1.14, -0.23]} ref={typresfl}/>
        <mesh geometry={nodes.FR.geometry} material={materials.tread_png} position={[-0.82, -1.14, -0.23]} ref={typresfr} />
        <mesh geometry={nodes.Halo.geometry} material={materials.mcl35m_h_png} />
        <mesh geometry={nodes.Object_2.geometry} material={materials.mcl35m_c_png} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.mcl35m_m_png} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.mcl35m_png} />
        <mesh geometry={nodes.Object_6.geometry} material={materials.rim_png} />
        <mesh geometry={nodes.Object_9.geometry} material={materials.tyrewall_png} />
        <mesh geometry={nodes.Steering.geometry} material={materials.st_wheel_png} /*position={[0, -0.05, 0.03]}*/ ref={ste}/>
      </group>
    </group>
  )
}

useGLTF.preload('./src/assets/models/runner/SMC.glb')